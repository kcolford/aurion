#!/bin/sh
aur=aur.archlinux.org
[ "$1" ] || exit
d="$(dirname "$1")"
b="$(basename "$1")"
mkdir -p "$d"

# use git to clone from the aur
aur_clone() {
    if [ ! -d "$1" ]; then
	# git config -f .gitmodules submodule."$1".path "$1"
	# git config -f .gitmodules submodule."$1".url https://$aur/"$b"
	git add https://$aur/"$b" "$1"
    fi
    git submodule update --init "$1"
    git -C "$1" pull
    excludefile=.git/modules/"$1"/info/exclude
}

case "$d" in
    aur)
	aur_clone "$1"
	;;
    my-aur)
	aur_clone "$1"
	git -C "$1" config url.ssh://aur@$aur/"$b".pushInsteadOf https://$aur/"$b"
	;;
    core|extra|community)
	which abs > /dev/null || exit
	ABSROOT=. abs "$d/$b"
	;;
esac

# apply changes in the edits/ directory to the build files
[ ! -f edits/"$b" ] || sed -i -f edits/"$b" "$1"/PKGBUILD

# update ignore files so git is happy
touch "${excludefile:=$1/.gitignore}"
add_excludes() {
    for exclude; do
	fgrep -q "$exclude" "$excludefile" || echo "$exclude" >> "$excludefile"
    done
}
add_excludes '/*.pkg.tar*'
